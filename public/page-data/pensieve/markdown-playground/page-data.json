{
  "componentChunkName": "component---src-templates-post-js",
  "path": "/pensieve/markdown-playground",
  "result": {
    "data": {
      "markdownRemark": {
        "html": "<p><img src=\"./image.jpg\" alt=\"Image Alt\"></p>\n<pre><code class=\"language-jsx\">class FlavorForm extends React.Component { // highlight-line\n  constructor(props) {\n    super(props);\n    this.state = {value: 'coconut'};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    // highlight-next-line\n    this.setState({value: event.target.value});\n  }\n\n  // highlight-start\n  handleSubmit(event) {\n    alert('Your favorite flavor is: ' + this.state.value);\n    event.preventDefault();\n  }\n  // highlight-end\n\n  render() {\n    return (\n      { /* highlight-range{1,4-9,12} */ }\n      &#x3C;form onSubmit={this.handleSubmit}>\n        &#x3C;label>\n          Pick your favorite flavor:\n          &#x3C;select value={this.state.value} onChange={this.handleChange}>\n            &#x3C;option value=\"grapefruit\">Grapefruit&#x3C;/option>\n            &#x3C;option value=\"lime\">Lime&#x3C;/option>\n            &#x3C;option value=\"coconut\">Coconut&#x3C;/option>\n            &#x3C;option value=\"mango\">Mango&#x3C;/option>\n          &#x3C;/select>\n        &#x3C;/label>\n        &#x3C;input type=\"submit\" value=\"Submit\" />\n      &#x3C;/form>\n    );\n  }\n}\n</code></pre>\n<pre><code class=\"language-javascript:title=highlight.js\">// Here is a comment\nfunction $initHighlight(block, cls) {\n  try {\n    if (cls.search(/\\bno\\-highlight\\b/) != -1)\n      return process(block, true, 0x0F) +\n             ` class=\"${cls}\"`;\n  } catch (e) {\n    /* handle exception */\n  }\n  for (var i = 0 / 2; i &#x3C; classes.length; i++) {\n    if (checkCondition(classes[i]) === undefined) {\n      console.log('undefined');\n    }\n  }\n\n  return (\n    &#x3C;div>\n      &#x3C;web-component>{block}&#x3C;/web-component>\n    &#x3C;/div>\n  )\n}\n\nexport $initHighlight;\n</code></pre>\n<p>This is a paragraph.</p>\n<pre><code>This is a paragraph.\n</code></pre>\n<h1>Header 1</h1>\n<h2>Header 2</h2>\n<pre><code>Header 1\n========\n\nHeader 2\n--------\n</code></pre>\n<pre><code class=\"language-css\">@import 'compass/reset';\n\n// variables\n$colorGreen: #008000;\n$colorGreenDark: darken($colorGreen, 10);\n\n@mixin container {\n  max-width: 980px;\n}\n\n// mixins with parameters\n@mixin button($color: green) {\n  @if ($color == green) {\n    background-color: #008000;\n  } @else if ($color == red) {\n    background-color: #b22222;\n  }\n}\n\nbutton {\n  @include button(red);\n}\n\ndiv,\n.navbar,\n#header,\ninput[type='input'] {\n  font-family: 'Helvetica Neue', Arial, sans-serif;\n  width: auto;\n  margin: 0 auto;\n  display: block;\n}\n\n.row-12 > [class*='spans'] {\n  border-left: 1px solid #b5c583;\n}\n\n// nested definitions\nul {\n  width: 100%;\n  padding: {\n    left: 5px;\n    right: 5px;\n  }\n  li {\n    float: left;\n    margin-right: 10px;\n    .home {\n      background: url('http://placehold.it/20') scroll no-repeat 0 0;\n    }\n  }\n}\n\n.banner {\n  @extend .container;\n}\n\na {\n  color: $colorGreen;\n  &#x26;:hover {\n    color: $colorGreenDark;\n  }\n  &#x26;:visited {\n    color: #c458cb;\n  }\n}\n\n@for $i from 1 through 5 {\n  .span#{$i} {\n    width: 20px * $i;\n  }\n}\n\n@mixin mobile {\n  @media screen and (max-width: 600px) {\n    @content;\n  }\n}\n</code></pre>\n<pre><code class=\"language-markdown\"># hello world\n\nyou can write text [with links](http://example.com) inline or [link references][1].\n\n- one _thing_ has *em*phasis\n- two **things** are **bold**\n\n[1]: http://example.com\n\n---\n\n# hello world\n\n&#x3C;this_is inline=\"xml\">&#x3C;/this_is>\n\n> markdown is so cool\n\n    so are code segments\n\n1. one thing (yeah!)\n2. two thing `i can write code`, and `more` wipee!\n</code></pre>\n<h1>Header 1</h1>\n<h2>Header 2</h2>\n<h3>Header 3</h3>\n<h4>Header 4</h4>\n<h5>Header 5</h5>\n<h6>Header 6</h6>\n<pre><code># Header 1\n## Header 2\n### Header 3\n#### Header 4\n##### Header 5\n###### Header 6\n</code></pre>\n<h1>Header 1</h1>\n<h2>Header 2</h2>\n<h3>Header 3</h3>\n<h4>Header 4</h4>\n<h5>Header 5</h5>\n<h6>Header 6</h6>\n<pre><code># Header 1 #\n## Header 2 ##\n### Header 3 ###\n#### Header 4 ####\n##### Header 5 #####\n###### Header 6 ######\n</code></pre>\n<blockquote>\n<p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p>\n</blockquote>\n<pre><code>> Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n</code></pre>\n<blockquote>\n<h2>This is a header</h2>\n<ol>\n<li>This is the first list item.</li>\n<li>This is the second list item.</li>\n</ol>\n<p>Here's some example code:</p>\n<pre><code>Markdown.generate();\n</code></pre>\n</blockquote>\n<pre><code>> ## This is a header.\n> 1. This is the first list item.\n> 2. This is the second list item.\n>\n> Here's some example code:\n>\n>     Markdown.generate();\n</code></pre>\n<ul>\n<li>\n<p>Red</p>\n</li>\n<li>\n<p>Green</p>\n</li>\n<li>\n<p>Blue</p>\n</li>\n<li>\n<p>Red</p>\n</li>\n<li>\n<p>Green</p>\n</li>\n<li>\n<p>Blue</p>\n</li>\n<li>\n<p>Red</p>\n</li>\n<li>\n<p>Green</p>\n</li>\n<li>\n<p>Blue</p>\n</li>\n</ul>\n<pre><code class=\"language-markdown\">- Red\n- Green\n- Blue\n\n* Red\n* Green\n* Blue\n\n- Red\n- Green\n- Blue\n</code></pre>\n<ol>\n<li>Buy flour and salt</li>\n<li>Mix together with water</li>\n<li>Bake</li>\n</ol>\n<pre><code class=\"language-markdown\">1. Buy flour and salt\n1. Mix together with water\n1. Bake\n</code></pre>\n<p>Paragraph:</p>\n<pre><code>Code\n</code></pre>\n<!-- -->\n<pre><code>Paragraph:\n\n    Code\n</code></pre>\n<hr>\n<hr>\n<hr>\n<hr>\n<hr>\n<pre><code>* * *\n\n***\n\n*****\n\n- - -\n\n---------------------------------------\n</code></pre>\n<p>This is <a href=\"http://example.com\" title=\"Example\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">an example</a> link.</p>\n<p><a href=\"http://example.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">This link</a> has no title attr.</p>\n<p>This is <a href=\"http://example.com\" title=\"Optional Title\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">an example</a> reference-style link.</p>\n<pre><code>This is [an example](http://example.com \"Example\") link.\n\n[This link](http://example.com) has no title attr.\n\nThis is [an example] [id] reference-style link.\n\n[id]: http://example.com \"Optional Title\"\n</code></pre>\n<p><em>single asterisks</em></p>\n<p><em>single underscores</em></p>\n<p><strong>double asterisks</strong></p>\n<p><strong>double underscores</strong></p>\n<pre><code>*single asterisks*\n\n_single underscores_\n\n**double asterisks**\n\n__double underscores__\n</code></pre>\n<p>This paragraph has some <code>code</code> in it.</p>\n<pre><code>This paragraph has some `code` in it.\n</code></pre>",
        "frontmatter": {
          "title": "Markdown Test File",
          "description": "abc234",
          "date": "2019-12-07T00:00:00.000Z",
          "slug": "/pensieve/markdown-playground",
          "tags": ["Testing"]
        }
      }
    },
    "pageContext": {}
  },
  "staticQueryHashes": ["2009693873", "3330274552", "3539500889", "3825832676"]
}
