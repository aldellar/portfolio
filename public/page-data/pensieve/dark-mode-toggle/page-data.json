{
  "componentChunkName": "component---src-templates-post-js",
  "path": "/pensieve/dark-mode-toggle",
  "result": {
    "data": {
      "markdownRemark": {
        "html": "<p>Dark mode toggle without the flash of default theme. Important bits:</p>\n<ul>\n<li>CSS variables for color theming</li>\n<li>Put <code>data-theme</code> attribute on <code>&#x3C;html></code>, not <code>&#x3C;body></code>, so we can run the JS before the DOM finishes rendering</li>\n<li>Run local storage check in the <code>&#x3C;head></code></li>\n<li>JS for toggle button click handler can come after render</li>\n</ul>\n<h2>HTML</h2>\n<pre><code class=\"language-html\">&#x3C;!DOCTYPE html>\n&#x3C;html lang=\"en\" data-theme=\"light\">\n  &#x3C;head>\n    &#x3C;meta charset=\"utf-8\" />\n    &#x3C;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    ...\n    &#x3C;script>\n      // If there's a theme stored in localStorage, use it on the &#x3C;html>\n      const localStorageTheme = localStorage.getItem('theme');\n      if (localStorageTheme) {\n        document.documentElement.setAttribute('data-theme', localStorageTheme);\n      }\n    &#x3C;/script>\n  &#x3C;/head>\n  &#x3C;body>\n    &#x3C;div class=\"theme-toggle\">\n      &#x3C;button\n        class=\"theme-toggle-btn js-theme-toggle\"\n        aria-label=\"Activate dark mode\"\n        title=\"Activate dark mode\"\n      >\n        &#x3C;!--\n        &#x3C;svg class=\"light-mode\">\n          &#x3C;use xlink:href=\"#sun\">&#x3C;/use>\n        &#x3C;/svg>\n        &#x3C;svg class=\"dark-mode\">\n          &#x3C;use xlink:href=\"#moon\">&#x3C;/use>\n        &#x3C;/svg>\n        -->\n      &#x3C;/button>\n    &#x3C;/div>\n\n    &#x3C;script src=\"app.js\">&#x3C;/script>\n  &#x3C;/body>\n&#x3C;/html>\n</code></pre>\n<h2>CSS Variables</h2>\n<pre><code class=\"language-css\">:root {\n  --bg: #ffffff;\n  --text: #000000;\n}\n\n[data-theme='dark'] {\n  --bg: #000000;\n  --text: #ffffff;\n}\n</code></pre>\n<h2>JavaScript</h2>\n<pre><code class=\"language-js:title=app.js\">const themeToggleBtn = document.querySelector('.js-theme-toggle');\n\nthemeToggleBtn.addEventListener('click', () => onToggleClick());\n\nconst onToggleClick = () => {\n  const { theme } = document.documentElement.dataset;\n  const themeTo = theme &#x26;&#x26; theme === 'light' ? 'dark' : 'light';\n  const label = `Activate ${theme} mode`;\n\n  document.documentElement.setAttribute('data-theme', themeTo);\n  localStorage.setItem('theme', themeTo);\n\n  themeToggleBtn.setAttribute('aria-label', label);\n  themeToggleBtn.setAttribute('title', label);\n};\n</code></pre>\n<h2>Resources</h2>\n<ul>\n<li><a href=\"https://css-tricks.com/a-complete-guide-to-dark-mode-on-the-web/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://css-tricks.com/a-complete-guide-to-dark-mode-on-the-web/</a></li>\n<li><a href=\"https://css-tricks.com/flash-of-inaccurate-color-theme-fart/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://css-tricks.com/flash-of-inaccurate-color-theme-fart/</a></li>\n<li><a href=\"https://mxb.dev/blog/color-theme-switcher/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://mxb.dev/blog/color-theme-switcher/</a></li>\n<li><a href=\"https://www.joshwcomeau.com/react/dark-mode/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.joshwcomeau.com/react/dark-mode/</a></li>\n<li><a href=\"https://web.dev/prefers-color-scheme/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://web.dev/prefers-color-scheme/</a></li>\n</ul>",
        "frontmatter": {
          "title": "Dark Mode Toggle",
          "description": "Dark mode without the flash of default theme",
          "date": "2021-04-21T00:00:00.000Z",
          "slug": "/pensieve/dark-mode-toggle",
          "tags": ["Theming", "Dark Mode"]
        }
      }
    },
    "pageContext": {}
  },
  "staticQueryHashes": ["2009693873", "3330274552", "3539500889", "3825832676"]
}
